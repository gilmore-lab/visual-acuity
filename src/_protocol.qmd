---
title: Protocol
format:
  html:
    code-fold: true
    code-tools: true
    toc: true
---

## Overview

This page describes the protocol for collecting, capturing, and cleaning data associated with the project.

::: {.callout-warning}

On April 1, no joke!, we changed the protocol substantially based on our discovery that Paperpile can export references with useful tags directly to our Github repo.

The old version of the protocol can be found [here](protocol_v01.qmd).

:::

## Literature search

### Goals

1. Capture the published literature that reports data on using Teller Acuity Cards.

2. Create a database of that literature.

### Phase I: Search

::: {.callout-note}

Here are some preparatory steps that need to be completed prior to doing literature search tasks.

1. Open Google Chrome from a lab computer.
2. Log into psubrainlab’s google account (psubrainlab@gmail.com ask Dr. Gilmore or Andrea for password)
2. Search “paperpile chrome extension” and install the paperpile chrome extension
3. On the paperpile website click ‘log in”. Choose the “log in with google” option

:::

#### Search terms

`teller acuity cards`</br>
`visual acuity cards`</br>
`teller cards`

#### Google Scholar

1. Visit Google Scholar: <https://scholar.google.com/>
2. Enter the search term
3. Make sure to select 'Sort by relevance', 'Any type', and *do not* check 'include patents' or 'include citations'

For example, this URL uses `teller acuity cards`:

<https://scholar.google.com/scholar?hl=en&as_sdt=0,39&as_vis=1&q=%22teller+acuity+cards%22>

When looking for sources on Google Scholar, look for the Paperpile box and ensure it is gray. 
Gray sources are sources we do not currently have in Paperpile. 

![Reference not yet in our Paperpile](include/img/google-scholar-not-in-paperpile.png){width="60%" .lightbox}

Green sources indicate we already have collected them in Paperpile. 

![Reference already in Paperpile](include/img/google-scholar-already-in-paperpile.png){width="60%" .lightbox}

Add the references **not** already in Paperpile by pressing the grey button.

4. After you have retrieved a page of entries, switch to the Paperpile tab to add the `TAC` tag to these entries. Use shift-click to select multiple entries in Paperpile.

![Papers recently added to Paperpile. After clicking on the tags button and entering 'TAC' in the search window, Paperpile lists all of the paper with the . 'TAC' tag. To add 'TAC' to the new, *selected* papers, click on the checkbox.](include/img/paperpile-add-tac-tag.png){width="60%" .lightbox}

### Phase II: Data entry

#### Goals

1. Create a database of references found in Phase I.

#### Option A: Automated extraction

::: {.callout-note}

It is possible to export the Paperpile references with the `TAC` tag directly to Github.
Rick tested this workflow on 2024-02-02.
What is yet unclear is whether the reference file automatically updates.

There appear to be some R packages that can read *.bib files and convert them to data frames, see <https://rdrr.io/cran/revtools/> and <https://docs.ropensci.org/bib2df/>.

:::

We should assign someone the task of determining how to parse a `*.bib` file into a data frame.

#### Option B: Manual entry

In the meantime, we fall back on manual data entry.

1. Open the Google Sheet "Legacy Project Acuity Data: By Paper" and open the `paper_data` tab:

<https://docs.google.com/spreadsheets/d/1UFZkbh9oU4JHpYsrkDQcNmDyqD4J-qB74dhyMzIkqKs/edit#gid=2144658778>

![Paper reference database](include/img/visual-acuity-legacy-by-paper-paper_data.png){#fig-googlesheet-for-entering-refs width="60%" .lightbox}

2. In a second Chrome window, click on the Paperpile icon and open Paperpile.

![](include/img/open-paperpile-in-chrome.png){width="60%" .lightbox fig-align="center"}

3. In the left panel of the Paperpile window, search for the `TAC` tag and select it.

![Selecting the 'TAC' (Teller Acuity Cards) tag in Paperpile](include/img/paperpile-select-tac-tag.png){width="60%" .lightbox}

4. In the right panel of the Paperpile window, select sort by author.

![Sort Paperpile entries by author](include/img/paperpile-sort-by-author.png){width="60%" .lightbox}

5. Shrink the Paperpile window and push it flush right, then shrink the Google Sheets window and push it flush left.

![Window placement for data entry](include/img/googlesheets-left-paperpile-right.png){width="60%" .lightbox}

6. Sort Google Sheet data by Author

7. Copy citation (in APA format) from Paperpile (using the command+c keyboard shortcut) and paste into 'citation' field in Google Sheet.

8. Reformat Google Sheet 'citation' column.

a. Select column
b. Select Format | Wrapping | Wrap 

![](include/img/reformat-wrap-citation.png){width="60%" .lightbox fig-align="center"}

xx. Sort Google Sheet data by `author_first` and `pub_year`

Data | Sort Range | Advanced 

![Sorting a Google Sheet](include/img/sort-google-sheet-author-pub-year.png){width="60%" .lightbox}

![Sort settings for `author_first` and `pub_year`](include/img/google-sheet-sort-parameter-settings.png){width="60%" .lightbox}

## Data evaluation & extraction

### Goals

1. To evaluate each paper to determine whether it contains extractable data.
2. To extract group-level data from each paper identified as having extractable data.
2. Enter group-level data into a common database.

### Data evaluation

### Data extraction

### Quality Assurance
